{
  "name": "json2css",
  "description": "Convert JSON into pre-processor ready CSS",
  "version": "3.2.0",
  "homepage": "https://github.com/twolfson/json2css",
  "author": {
    "name": "Todd Wolfson",
    "email": "todd@twolfson.com",
    "url": "http://twolfson.com/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/twolfson/json2css.git"
  },
  "bugs": {
    "url": "https://github.com/twolfson/json2css/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/twolfson/json2css/blob/master/LICENSE-MIT"
    }
  ],
  "main": "lib/json2css",
  "engines": {
    "node": ">= 0.6.0"
  },
  "scripts": {
    "test": "doubleshot"
  },
  "dependencies": {
    "mustache": "~0.7.0",
    "underscore": "~1.4.2",
    "json-content-demux": "~0.1.2"
  },
  "devDependencies": {
    "grunt": "~0.3.12",
    "stylus": "~0.32.0",
    "doubleshot": "~1.0.2",
    "less": "~1.3.3",
    "temporary": "0.0.5"
  },
  "keywords": [
    "json",
    "css",
    "sass",
    "scss",
    "stylus",
    "less",
    "sprite",
    "spritesheet",
    "layout"
  ],
  "readme": "# json2css [![Donate on Gittip](http://badgr.co/gittip/twolfson.png)](https://www.gittip.com/twolfson/)\n\nConvert JSON into pre-processor ready CSS.\n\nThis is initially designed for generating coordinates for a mapping of sprites on a spritesheet. However, it should be usable for anything related to dimensions/positions and CSS.\n\n## Getting Started\nInstall the module with: `npm install json2css`\n\n```javascript\n// Compilation\nvar json2css = require('json2css'),\n    obj = [\n      {'name': 'github', 'x': 0, 'y': 0, 'width': 10, 'height': 20, 'total_width': 80, 'total_height': 100, 'image': 'spritesheet.png'},\n      {'name': 'twitter', 'x': 10, 'y': 20, 'width': 20, 'height': 30, 'total_width': 80, 'total_height': 100, 'image': 'spritesheet.png'},\n      {'name': 'rss', 'x': 30, 'y': 50, 'width': 50, 'height': 50, 'image': 'spritesheet.png'}\n    ],\n    stylus = json2css(obj, {'format': 'stylus'});\n\n// Result (stylus)\n$github_x = 0px;\n$github_y = 0px;\n...\n$github = 0px 0px 0px 0px 10px 20px 80px 100px 'spritesheet.png';\n...\n$twitter = 10px 20px -10px -20px 20px 30px 80px 100px 'spritesheet.png';\n...\n$rss = 30px 50px -30px -50px 50px 50px 80px 100px 'spritesheet.png';\n...\nspriteWidth($sprite) {\n  width: $sprite[0];\n}\n...\nsprite($sprite) {\n  spriteImage($sprite)\n  spritePosition($sprite)\n  spriteWidth($sprite)\n  spriteHeight($sprite)\n}\n\n// Inside of your Stylus\n.githubLogo {\n  sprite($github);\n}\n```\n\n## Documentation\njson2css is a single function repo\n```js\n/**\n * @param {Object|Object[]} input Object to convert into CSS\n * @param {String} input.name Name to use for the image\n *                 If input is an object, the key will be the name by default\n * @param {Number} input.x Horizontal coordinate of top-left corner of image\n * @param {Number} input.y Vertical coordinate of top-left corner of image\n * @param {Number} input.width Horizontal length of image\n * @param {Number} input.height Vertical length of image\n * @param {Number} input.total_width Horizontal length of spritesheet\n * @param {Number} input.total_height Vertical length of spritesheet\n * @param {Number} input.image Path to image itself (used as a URL component)\n * @param {Object} [options] Options to convert JSON with\n * @param {String} [options.format=css] Format to output json in\n *                                       Available: json, css, less, sass, scss, stylus\n * @param {Mixed} [options.formatOpts={}] Options to pass through to the formatter\n */\n```\n\nNew templates can be added dynamically via\n```js\n// Processes template via function\njson2css.addTemplate(name, fn);\n\n// Processes template via mustache\njson2css.addMustacheTemplate(name, tmplStr);\n```\n\n## Examples\nUsing `json2css` with an object\n\n```js\nvar obj = {\n      'github': {'x': 0, 'y': 0, 'width': 10, 'height': 20, 'total_width': 80, 'total_height': 100, 'image': 'spritesheet.png'},\n      'twitter': {'x': 10, 'y': 20, 'width': 20, 'height': 30, 'total_width': 80, 'total_height': 100, 'image': 'spritesheet.png'},\n      'rss': {'x': 30, 'y': 50, 'width': 50, 'height': 50, 'total_width': 80, 'total_height': 100, 'image': 'spritesheet.png'}\n    },\n    stylus = json2css(obj, {'format': 'stylus'});\n\n// Result (stylus)\n$github_x = 0px;\n$github_y = 0px;\n...\n$github = 0px 0px 0px 0px 10px 20px 80px 100px 'spritesheet.png';\n...\n$twitter = 10px 20px -10px -20px 20px 30px 80px 100px 'spritesheet.png';\n...\n$rss = 30px 50px -30px -50px 50px 50px 80px 100px 'spritesheet.png';\n...\nspriteWidth($sprite) {\n  width: $sprite[0];\n}\n...\nsprite($sprite) {\n  spriteImage($sprite)\n  spritePosition($sprite)\n  spriteWidth($sprite)\n  spriteHeight($sprite)\n}\n\n// Inside of your Stylus\n.githubLogo {\n  sprite($github);\n}\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint via [grunt](https://github.com/cowboy/grunt) and test via `npm test`.\n\n## License\nCopyright (c) 2012 Todd Wolfson\n\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "json2css@3.2.0",
  "_from": "json2css@~3.2.0"
}
